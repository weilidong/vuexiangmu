{"remainingRequest":"C:\\Users\\39478\\Desktop\\vue项目\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\39478\\Desktop\\vue项目\\test\\src\\App.vue?vue&type=style&index=0&id=7ba5bd90&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\39478\\Desktop\\vue项目\\test\\src\\App.vue","mtime":1572660461519},{"path":"C:\\Users\\39478\\Desktop\\vue项目\\test\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\39478\\Desktop\\vue项目\\test\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\39478\\Desktop\\vue项目\\test\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\39478\\Desktop\\vue项目\\test\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\39478\\Desktop\\vue项目\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\39478\\Desktop\\vue项目\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiogewogIHBhZGRpbmc6IDA7CiAgbWFyZ2luOiAwOwogIGxpc3Qtc3R5bGU6IG5vbmU7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"#app\">\n    <input type=\"text\" v-model=\"input\" @keydown=\"addfn($event)\" placeholder=\"请输入内容\" />\n    <p>\n      总任务：{{list.length}},已完成{{count}}\n      <input type=\"checkbox\" ref=\"input1\" @click=\"input1\" />未完成\n      <input type=\"checkbox\" ref=\"input2\" @click=\"input2\" />完成\n    </p>\n    <ul>\n      <li v-for=\"(v,i) in newlist\" :key=\"i\">\n        {{i}}.{{v.title}}\n        <button @click=\"del(i)\">删除</button>\n        <button v-if=\"!v.bool\" type=\"success\" :ref=\"i\" @click=\"fn(i)\">未完成</button>\n        <button v-if=\"v.bool\" :style=\"{background:'red'}\">完成</button>\n      </li>\n    </ul>\n        <Emit :state='state' @state='stateChange'/>\n  </div>\n</template>\n\n<script>\nimport Emit from \"./component/emit\";\nexport default {\n  data() {\n    return {\n      list: [\n        {\n          num: 0,\n          title: \"向往的生活\",\n          bool: false\n        },\n        {\n          num: 1,\n          title: \"奔跑吧\",\n          bool: false\n        },\n        {\n          num: 2,\n          title: \"快乐家族\",\n          bool: false\n        },\n        {\n          num: 3,\n          title: \"极限挑战\",\n          bool: false\n        }\n      ],\n      input: \"\",\n      count: 0,\n      newlist: [],\n      state:'下雨了'\n    };\n  },\n  mounted() {\n    this.newlist = this.list;\n  },\n  methods: {\n    stateChange(e){\n             this.state=e\n    },\n    fn(i) {\n      this.list[i].bool = true;\n      let arr = this.list.filter(v => v.bool);\n      this.count = arr.length;\n    },\n    del(i) {\n      this.list.splice(i, 1);\n      let arr = this.list.filter(v => v.bool);\n      this.count = arr.length;\n    },\n    input1() {\n      if (this.$refs.input1.checked) {\n        let arr = this.list.filter(v => !v.bool);\n        this.newlist = arr;\n      } else {\n        this.newlist = this.list;\n      }\n    },\n    input2() {\n      if (this.$refs.input2.checked) {\n        let arr = this.list.filter(v => v.bool);\n        this.newlist = arr;\n      } else {\n        this.newlist = this.list;\n      }\n    },\n    addfn(e) {\n      let obj = {\n        num: this.list.length,\n        title: this.input,\n        bool: false\n      };\n      if (e.keyCode === 13) {\n        this.list.push(obj);\n      }\n    }\n  },\n  components: {\n    Emit\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n* {\n  padding: 0;\n  margin: 0;\n  list-style: none;\n}\n</style>"]}]}